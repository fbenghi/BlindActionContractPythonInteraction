{
	"compiler": {
		"version": "0.5.17+commit.d19bba13"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_biddingTime",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_revealTime",
						"type": "uint256"
					},
					{
						"internalType": "address payable",
						"name": "_beneficiary",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "winner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "highestBid",
						"type": "uint256"
					}
				],
				"name": "AuctionEnded",
				"type": "event"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "auctionEnd",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "beneficiary",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_blindedBid",
						"type": "bytes32"
					}
				],
				"name": "bid",
				"outputs": [],
				"payable": true,
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "biddingEnd",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "bids",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "blindedBid",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "deposit",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "ended",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "highestBid",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "highestBidder",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "_values",
						"type": "uint256[]"
					},
					{
						"internalType": "bool[]",
						"name": "_fake",
						"type": "bool[]"
					},
					{
						"internalType": "bytes32[]",
						"name": "_secret",
						"type": "bytes32[]"
					}
				],
				"name": "reveal",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "revealEnd",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_value",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "_fake",
						"type": "bool"
					}
				],
				"name": "testHash",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"payable": false,
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "withdraw",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"methods": {}
		},
		"userdoc": {
			"methods": {
				"auctionEnd()": {
					"notice": "End the auction and send the highest bid to the beneficiary."
				},
				"bid(bytes32)": {
					"notice": "Place a blinded bid with `_blindedBid` = keccak256(abi.encodePacked(value, fake, secret)). The sent ether is only refunded if the bid is correctly revealed in the revealing phase. The bid is valid if the ether sent together with the bid is at least \"value\" and \"fake\" is not true. Setting \"fake\" to true and sending not the exact amount are ways to hide the real bid but still make the required deposit. The same address can place multiple bids."
				},
				"reveal(uint256[],bool[],bytes32[])": {
					"notice": "Reveal your blinded bids. You will get a refund for all correctly blinded invalid bids and for all bids except for the totally highest."
				},
				"withdraw()": {
					"notice": "Withdraw a bid that was overbid."
				}
			}
		}
	},
	"settings": {
		"compilationTarget": {
			"browser/contracts/BlindAuction.sol": "BlindAuction"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"browser/contracts/BlindAuction.sol": {
			"keccak256": "0xbb174608265a5ce6e38c2905540a2ec4da157ee754cc62097c474aee9e60bbdb",
			"urls": [
				"bzz-raw://a1d8e4c0d774ca816da8900122c06925e2c672b6d4a92377619c6cc278b17706",
				"dweb:/ipfs/QmTX8n75VeW2P3dfZAcbkSuTRAqELrJUpN5TGcVFr64mYA"
			]
		}
	},
	"version": 1
}